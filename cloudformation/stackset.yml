AWSTemplateFormatVersion: '2010-09-09'

Description: Resources for Cornell standard SomeResource. Do not alter. Contact cloud-support@cornell.edu with questions.

Metadata:
  Source: https://github.com/CU-CommunityApps/cu-aws-cloudformation/template-template/template.yaml
  Version: "1.0.1"
  RecommendedStackName: $ENV-recommended-stack-name
  ChangeLog:
    "1.0.1":
      - added change log
      - added deployment script
      - added EnvironmentParam
      - added DocumentationURLParam
    "1.0.0":
      - inital release

Parameters:

  VersionParam:
    Description: CIT template version
    Type: String
    
  ContactEmailParam:
    Description: CIT contact email tag value version
    Default: cloud-support@cornell.edu
    Type: String
    
  SourceURLParam:
    Description: URL of this template in source code repository (not necessarily public)
    Default: https://github.com/CU-CommunityApps/cu-aws-cloudformation/template-template/template.yaml
    Type: String

  EnvironmentParam:
    Description: Environment for the resources this template creates.
    Default: dev
    Type: String
    AllowedValues:
      - dev
      - test
      - prod
  
  DocumentationURLParam:
    Description: URL of documentation about this deployment or these resources
    Default: https://confluence.cornell.edu/pages/viewpage.action?spaceKey=CLOUD&title=AWS+Backup+Service+Deployment+Process+via+Cloudformation+Gitsync
    Type: String

  BackupVaultName:
    Description: Name of the backup vault created in AWS Backup Service where restore points are stored
    Default: backupVault
    Type: String
    
  BackupPlanName:
    Description: Name of the backup plan created in AWS Backup Service
    Default: backupPlan
    Type: String

  BackupPlanRuleName:
    Description: Name of Backup rule name
    Default: DailyBackup
    Type: String
  
  BackupRunTime:
    Description: Cron expression to specify backup time
    Default: cron(0 9 * * ? *)  # Daily at 04:00 AM EST (09:00 PM UTC)
    Type: String

  BackupStartWindow:
    Description: A value in minutes the backup must start by.
    Default: 60
    Type: Number
  
  BackupCompletionWindow:
    Description: A value in minutes after a backup job is successfully started before it must be completed or it is canceled by AWS Backup.
    Default: 120
    Type: Number

  BackupRetention:
    Description: Specifies the number of days after creation that a recovery point is deleted.
    Default: 7 # Retain backup for 7 days
    Type: Number

  BackupTagName:
    Description: ConditionKey value
    Default: "cit:backup-scheme"
    Type: String

  BackupTagValue:
    Description: Value of Tag set for instance with value to be backed up
    Default: "default"
    Type: String

Mappings: 
  RegionMap:
    us-east-1:
      AMI: ami-0c7217cdde317cfec # Ubuntu Server 22.04 LTS (HVM),EBS General Purpose (SSD) Volume Type

Conditions: {} 

Resources:

  MyEC2Instance1:
    Type: AWS::EC2::Instance
    DeletionPolicy: Delete
    Properties:
      InstanceType: t2.micro
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      Tags:
        - Key: "Name"
          Value: "ec2backupTestInstance"
        - Key: !Ref BackupTagName
          Value: !Ref BackupTagValue
        - Key: Environment
          Value: !Ref EnvironmentParam
        - Key: Description
          Value: "Ubuntu EC2 Instance for Testing"
        - Key: Documentation
          Value: !Ref DocumentationURLParam
        - Key: cit:contact-email
          Value: !Ref ContactEmailParam
        - Key: cit:version
          Value: !Ref VersionParam
        - Key: cit:source
          Value: !Ref SourceURLParam
      BlockDeviceMappings:
        - DeviceName: "/dev/sdh"
          Ebs:
            VolumeSize: 10
            DeleteOnTermination: true
            VolumeType: gp2

  # Backup Vault
  Vault:
    Type: AWS::Backup::BackupVault
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      BackupVaultName: !Ref BackupVaultName
      # You can also set encryption settings and access policies here

  # Backup Plan
  BackupPlan:
    Type: AWS::Backup::BackupPlan
    Properties:
      BackupPlan:
        BackupPlanName: !Ref BackupPlanName
        BackupPlanRule:
          - RuleName: !Ref BackupPlanRuleName
            TargetBackupVault: !Ref Vault
            ScheduleExpression: !Ref BackupRunTime
            StartWindowMinutes: !Ref BackupStartWindow
            CompletionWindowMinutes: !Ref BackupCompletionWindow
            Lifecycle:
              DeleteAfterDays: !Ref BackupRetention

  # IAM Role for AWS Backup
  IAMrole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: backup.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BackupRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeVolumes
                  - ec2:DescribeSnapshots
                  - ec2:CreateTags
                  - ec2:CreateSnapshot
                  - ec2:DeleteSnapshot
                  - ec2:DescribeTags
                  - ec2:DescribeImages
                  - ec2:DescribeInstances
                  - ec2:DescribeVolumes
                  - ec2:CreateImage
                  - ec2:DescribeInstanceCreditSpecifications
                  - ec2:DescribeInstanceAttribute
                  - ec2:DescribeSnapshotTierStatus
                  - ec2:RestoreSnapshotTier
                  - ec2:ModifySnapshotTier
                  - ec2:DescribeNetworkInterfaces
                  - tag:GetResources
                Resource: "*"

  BackupSelection:
    Type: AWS::Backup::BackupSelection
    Properties:
      BackupPlanId: !Ref BackupPlan
      BackupSelection:
        SelectionName: AllInstancesSelection
        IamRoleArn: !GetAtt IAMrole.Arn
        ListOfTags:
          - ConditionType: STRINGEQUALS
            ConditionKey: !Ref TagName
            ConditionValue: !Ref TagValue